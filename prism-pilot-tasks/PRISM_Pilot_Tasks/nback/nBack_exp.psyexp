<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.10">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'counterbalance': '', 'session': '', 'stim site': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1792, 1120]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-0.067,-0.122,-0.122]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="nBack_exp_v2" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="debug" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="endStudy">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The study is over. Thank you!" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="hide_mouse">
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="[your_mouse = event.Mouse(visible = False)]" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Prac_Instructions_nback">
      <CodeComponent name="setTrials">
        <Param name="Before Experiment" updates="constant" val="exp = []" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="exp = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="n = N_prac;&amp;#10;totalTrials = 18;&amp;#10;nBackTrials = 6;&amp;#10;trialList = (([0] * (totalTrials - nBackTrials)) + ([1] * nBackTrials));&amp;#10;bufferTrials = trialList.slice(0, n);&amp;#10;experimentalTrials = trialList.slice(n);&amp;#10;shuffle(experimentalTrials);&amp;#10;trialList = (bufferTrials + experimentalTrials);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# usually we would use a conditions file to specify the number of nBack trials&amp;#10;# but we want to ensure the position of the first n-Back trial&amp;#10;# adapts to the requested n. i.e. if this is a 4-back trial&amp;#10;# we cannot present an n-Back trial in the first 3 trials&amp;#10;&amp;#10;# what is the n (e.g. n = 2 &quot;remember if this item is the same as 2 back&quot;)&amp;#10;n = N_prac&amp;#10;# how many trials in total?&amp;#10;totalTrials = 18&amp;#10;# how many n-Back trials?&amp;#10;nBackTrials = 6&amp;#10;&amp;#10;# make a list of trials; 0 = not nBack; 1 = nBack trial&amp;#10;trialList = [0]*(totalTrials-nBackTrials)+[1]*nBackTrials&amp;#10;&amp;#10;# buffer trials = first set of trials where an n-back trial cannot be presented&amp;#10;bufferTrials = trialList[:n]&amp;#10;&amp;#10;# experimental trials - include nBack trials&amp;#10;experimentalTrials = trialList[n:]&amp;#10;&amp;#10;# randomise the experimental trials&amp;#10;shuffle(experimentalTrials)&amp;#10;&amp;#10;# combine the buffer trials and experimental trials to make the final trialList&amp;#10;trialList = bufferTrials+experimentalTrials&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="setTrials" valType="code"/>
      </CodeComponent>
      <TextComponent name="instructionsTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instructionsTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$&quot;This is a practice block for the &quot; + str(n) + &quot;-back trials. You will respond with the &quot; +  str(key1) + &quot; key whenever the current letter is the same as the one presented &quot; + str(n) + &quot; trial(s) ago. Otherwise, hit the &quot; + str(key2) + &quot; key. The letters will flash briefly on screen and you may respond even after letter will disappear on the +. Click Space to begin the task.&quot;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixation_2">
      <TextComponent name="fixation_start">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="fixation_start" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="end_2">
      <TextComponent name="endMsg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="endMsg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Break between blocks. The experiment will move on in a couple of seconds. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Experimental_Instructions_nback">
      <CodeComponent name="expSetTrials">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="n = N_trial;&amp;#10;totalTrials = 18;&amp;#10;nBackTrials = 6;&amp;#10;blocks = 8;&amp;#10;list1 = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1];&amp;#10;list2 = [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1];&amp;#10;list3 = [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1];&amp;#10;list4 = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0];&amp;#10;list5 = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1];&amp;#10;list6 = [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1];&amp;#10;list7 = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1];&amp;#10;list8 = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1];&amp;#10;trialOrder1 = [list1, list2, list3, list4, list5, list6, list7, list8];&amp;#10;trialOrder2 = [list2, list3, list4, list1, list6, list7, list8, list5];&amp;#10;trialOrder3 = [list3, list4, list1, list2, list7, list8, list5, list6];&amp;#10;trialOrder4 = [list4, list1, list2, list3, list8, list5, list6, list7];&amp;#10;trialOrder5 = [list2, list4, list3, list1, list6, list8, list7, list5];&amp;#10;trialOrder6 = [list3, list2, list1, list4, list7, list6, list5, list8];&amp;#10;if ((expInfo[&quot;counterbalance&quot;] === &quot;1&quot;)) {&amp;#10;    sessOrder = trialOrder1;&amp;#10;} else {&amp;#10;    if ((expInfo[&quot;counterbalance&quot;] === &quot;2&quot;)) {&amp;#10;        sessOrder = trialOrder2;&amp;#10;    } else {&amp;#10;        if ((expInfo[&quot;counterbalance&quot;] === &quot;3&quot;)) {&amp;#10;            sessOrder = trialOrder3;&amp;#10;        } else {&amp;#10;            if ((expInfo[&quot;counterbalance&quot;] === &quot;4&quot;)) {&amp;#10;                sessOrder = trialOrder4;&amp;#10;            } else {&amp;#10;                if ((expInfo[&quot;counterbalance&quot;] === &quot;5&quot;)) {&amp;#10;                    sessOrder = trialOrder5;&amp;#10;                } else {&amp;#10;                    if ((expInfo[&quot;counterbalance&quot;] === &quot;6&quot;)) {&amp;#10;                        sessOrder = trialOrder6;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;ele = trials_4.thisTrialN;&amp;#10;if ((ele &lt; blocks)) {&amp;#10;    trialList = sessOrder[ele];&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# usually we would use a conditions file to specify the number of nBack trials&amp;#10;# but we want to ensure the position of the first n-Back trial&amp;#10;# adapts to the requested n. i.e. if this is a 4-back trial&amp;#10;# we cannot present an n-Back trial in the first 3 trials&amp;#10;&amp;#10;# what is the n (e.g. n = 2 &quot;remember if this item is the same as 2 back&quot;)&amp;#10;n = N_trial&amp;#10;# how many trials in total?&amp;#10;totalTrials = 18&amp;#10;# how many n-Back trials?&amp;#10;nBackTrials = 6&amp;#10;#how many blocks?&amp;#10;blocks = 8&amp;#10;&amp;#10;# make a list of trials; 0 = not nBack; 1 = nBack trial&amp;#10;#trialList = [0]*(totalTrials-nBackTrials)+[1]*nBackTrials&amp;#10;&amp;#10;# buffer trials = first set of trials where an n-back trial cannot be presented&amp;#10;#bufferTrials = trialList[:n]&amp;#10;&amp;#10;# experimental trials - include nBack trials&amp;#10;#experimentalTrials = trialList[n:]&amp;#10;&amp;#10;# randomise the experimental trials&amp;#10;#shuffle(experimentalTrials)&amp;#10;&amp;#10;# combine the buffer trials and experimental trials to make the final trialList&amp;#10;#trialList = bufferTrials+experimentalTrials&amp;#10;&amp;#10;list1 = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1]&amp;#10;list2 = [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1]&amp;#10;list3 = [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]&amp;#10;list4 = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]&amp;#10;list5 = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1]&amp;#10;list6 = [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]&amp;#10;list7 = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1]&amp;#10;list8 = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]&amp;#10;&amp;#10;&amp;#10;trialOrder1 = [list1, list2, list3, list4, list5, list6, list7, list8]&amp;#10;trialOrder2 = [list2, list3, list4, list1, list6, list7, list8, list5]&amp;#10;trialOrder3 = [list3, list4, list1, list2, list7, list8, list5, list6]&amp;#10;trialOrder4 = [list4, list1, list2, list3, list8, list5, list6, list7]&amp;#10;trialOrder5 = [list2, list4, list3, list1, list6, list8, list7, list5]&amp;#10;trialOrder6 = [list3, list2, list1, list4, list7, list6, list5, list8]&amp;#10;&amp;#10;&amp;#10;if expInfo['counterbalance'] == '1':&amp;#10;    sessOrder = trialOrder1&amp;#10;elif expInfo['counterbalance'] == '2':&amp;#10;    sessOrder = trialOrder2&amp;#10;elif expInfo['counterbalance'] == '3':&amp;#10;    sessOrder = trialOrder3&amp;#10;elif expInfo['counterbalance'] == '4':&amp;#10;    sessOrder = trialOrder4&amp;#10;elif expInfo['counterbalance'] == '5':&amp;#10;    sessOrder = trialOrder5&amp;#10;elif expInfo['counterbalance'] == '6':&amp;#10;    sessOrder = trialOrder6&amp;#10;&amp;#10;ele = trials_4.thisTrialN&amp;#10;if ele &lt; blocks:&amp;#10;    trialList = sessOrder[ele]&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="expSetTrials" valType="code"/>
      </CodeComponent>
      <TextComponent name="expInstructions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="expInstructions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$&quot;This is an experimental block of the  &quot;  + str(n) + &quot;-back task. Press the &quot; + str(key1) + &quot; key if the current letter is the same as &quot; + str(n) + &quot; prior to it (upper or lower case). If it is not, press the &quot; + str(key2) + &quot; key. The letters will flash briefly on screen and you may respond even after the letter disappears during the '+'. Press the 'spacebar' to begin the task.&quot;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_nback_2">
      <CodeComponent name="pickLetter">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="from random import choice&amp;#10;import string&amp;#10;import numpy as np&amp;#10;&amp;#10;lettersShown = []&amp;#10;allLetters = ['B', 'C', 'D', 'G', 'P', 'T', 'F', 'N', 'L']&amp;#10;trialCount = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="import {choice} from 'random';&amp;#10;import * as string from 'string';&amp;#10;import * as np from 'numpy';&amp;#10;var allLetters, lettersShown, trialCount;&amp;#10;lettersShown = [];&amp;#10;allLetters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;G&quot;, &quot;P&quot;, &quot;T&quot;, &quot;F&quot;, &quot;N&quot;, &quot;L&quot;];&amp;#10;trialCount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="thisTrialType = trialList[trialCount];&amp;#10;thisLetter = &quot;0&quot;;&amp;#10;letterSet = allLetters;&amp;#10;if ((thisTrialType === 0)) {&amp;#10;    if ((trialCount &gt; 1)) {&amp;#10;        availLetters = np.setdiff1d(letterSet, lettersShown.slice((- n)));&amp;#10;        shuffle(availLetters);&amp;#10;        thisLetter = availLetters.slice((- 1))[0];&amp;#10;    } else {&amp;#10;        availLetters = letterSet;&amp;#10;        shuffle(availLetters);&amp;#10;        thisLetter = availLetters.slice((- 1))[0];&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((thisTrialType === 1)) {&amp;#10;        thisLetter = lettersShown.slice((- n))[0];&amp;#10;    }&amp;#10;}&amp;#10;lettersShown.append(thisLetter);&amp;#10;trials.addData(&quot;trialCount&quot;, trialCount);&amp;#10;trials.addData(&quot;itemPresented&quot;, thisLetter);&amp;#10;trials.addData(&quot;trialType&quot;, thisTrialType);&amp;#10;if ((thisTrialType === 1)) {&amp;#10;    correct = &quot;right&quot;;&amp;#10;} else {&amp;#10;    correct = &quot;left&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="thisTrialType = trialList[trialCount]&amp;#10;thisLetter = &quot;0&quot;&amp;#10;letterSet = allLetters&amp;#10;&amp;#10;if thisTrialType == 0 :# not an n-back trial&amp;#10;    if trialCount &gt; 1:&amp;#10;        availLetters = np.setdiff1d(letterSet,lettersShown[-n::])&amp;#10;        shuffle(availLetters)&amp;#10;        thisLetter = availLetters[-1]&amp;#10;    else:&amp;#10;        availLetters = letterSet&amp;#10;        shuffle(availLetters)&amp;#10;        thisLetter = availLetters[-1]&amp;#10;elif thisTrialType ==1: # an n-back trial&amp;#10;    thisLetter = lettersShown[-n]&amp;#10;&amp;#10;lettersShown.append(thisLetter)&amp;#10;trials.addData('trialCount', trialCount)&amp;#10;trials.addData('itemPresented', thisLetter)&amp;#10;trials.addData('trialType', thisTrialType)&amp;#10;&amp;#10;&amp;#10;#correct trials&amp;#10;if thisTrialType == 1:&amp;#10;    correct = 'right'&amp;#10;else:&amp;#10;    correct = 'left'&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="trialCount += 1;&amp;#10;if ((trialCount &gt;= trialList.length)) {&amp;#10;    trialCount = 0;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trialCount +=1&amp;#10;if trialCount &gt;= len(trialList):&amp;#10;    trialCount = 0&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="pickLetter" valType="code"/>
      </CodeComponent>
      <TextComponent name="letter">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="letter" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$thisLetter.join(choice((str.upper, str.lower))(c) for c in thisLetter)&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="frame N" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="text_6">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="text_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Prac_Instructions_0back">
      <CodeComponent name="setTrials_0back">
        <Param name="Before Experiment" updates="constant" val="key1 = []&amp;#10;key2 = []" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="key1 = [];&amp;#10;key2 = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="if expInfo['session'] == '1':&amp;#10;    key1 = 'comma'&amp;#10;    key2 = 'period'&amp;#10;elif expInfo['session'] == '2':&amp;#10;    key1 = 'period'&amp;#10;    key2 = 'comma'" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="if ((expInfo[&quot;session&quot;] === &quot;1&quot;)) {&amp;#10;    key1 = &quot;comma&quot;;&amp;#10;    key2 = &quot;period&quot;;&amp;#10;} else {&amp;#10;    if ((expInfo[&quot;session&quot;] === &quot;2&quot;)) {&amp;#10;        key1 = &quot;period&quot;;&amp;#10;        key2 = &quot;comma&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="n = 0;&amp;#10;totalTrials = 3;&amp;#10;nBackTrials = 1;&amp;#10;trialList = (([0] * (totalTrials - nBackTrials)) + ([1] * nBackTrials));&amp;#10;bufferTrials = trialList.slice(0, n);&amp;#10;experimentalTrials = trialList.slice(n);&amp;#10;shuffle(experimentalTrials);&amp;#10;trialList = (bufferTrials + experimentalTrials);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# usually we would use a conditions file to specify the number of nBack trials&amp;#10;# but we want to ensure the position of the first n-Back trial&amp;#10;# adapts to the requested n. i.e. if this is a 4-back trial&amp;#10;# we cannot present an n-Back trial in the first 3 trials&amp;#10;&amp;#10;# what is the n (e.g. n = 2 &quot;remember if this item is the same as 2 back&quot;)&amp;#10;n = 0&amp;#10;# how many trials in total?&amp;#10;totalTrials = 3&amp;#10;# how many n-Back trials?&amp;#10;nBackTrials = 1&amp;#10;&amp;#10;# make a list of trials; 0 = not nBack; 1 = nBack trial&amp;#10;trialList = [0]*(totalTrials-nBackTrials)+[1]*nBackTrials&amp;#10;&amp;#10;# buffer trials = first set of trials where an n-back trial cannot be presented&amp;#10;bufferTrials = trialList[:n]&amp;#10;&amp;#10;# experimental trials - include nBack trials&amp;#10;experimentalTrials = trialList[n:]&amp;#10;&amp;#10;# randomise the experimental trials&amp;#10;shuffle(experimentalTrials)&amp;#10;&amp;#10;# combine the buffer trials and experimental trials to make the final trialList&amp;#10;trialList = bufferTrials+experimentalTrials&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="setTrials_0back" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="$&quot;This is a practice block for 0 back.  Whenever you see the letter X hit the &quot; + str(key1) + &quot; key. Otherwise, hit the the &quot; + str(key2) + &quot; key. The letters will flash briefly on screen and you may respond even after letter will disappear on the +. Click Space to begin the task.&quot;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_0back">
      <CodeComponent name="pickLetter_0back">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="from random import choice&amp;#10;import string&amp;#10;import time&amp;#10;&amp;#10;lettersShown = []&amp;#10;allLetters = ['B', 'C', 'D', 'G', 'P', 'T', 'F', 'N', 'L']&amp;#10;targetLetter = 'X'&amp;#10;trialCount = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="import {choice} from 'random';&amp;#10;import * as string from 'string';&amp;#10;import * as time from 'time';&amp;#10;var allLetters, lettersShown, targetLetter, trialCount;&amp;#10;lettersShown = [];&amp;#10;allLetters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;G&quot;, &quot;P&quot;, &quot;T&quot;, &quot;F&quot;, &quot;N&quot;, &quot;L&quot;];&amp;#10;targetLetter = &quot;X&quot;;&amp;#10;trialCount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="thisTrialType = trialList[trialCount];&amp;#10;thisLetter = &quot;0&quot;;&amp;#10;letterSet = allLetters;&amp;#10;if ((thisTrialType === 0)) {&amp;#10;    shuffle(letterSet);&amp;#10;    thisLetter = letterSet.slice((- 1))[0];&amp;#10;} else {&amp;#10;    if ((thisTrialType === 1)) {&amp;#10;        thisLetter = targetLetter;&amp;#10;    }&amp;#10;}&amp;#10;lettersShown.append(thisLetter);&amp;#10;trials.addData(&quot;trialCount&quot;, trialCount);&amp;#10;trials.addData(&quot;itemPresented&quot;, thisLetter);&amp;#10;trials.addData(&quot;trialType&quot;, thisTrialType);&amp;#10;if ((thisTrialType === 1)) {&amp;#10;    correct = &quot;right&quot;;&amp;#10;} else {&amp;#10;    correct = &quot;left&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="thisTrialType = trialList[trialCount]&amp;#10;thisLetter = &quot;0&quot;&amp;#10;letterSet = allLetters&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;if thisTrialType == 0 : # not an n-back trial&amp;#10;    shuffle(letterSet)&amp;#10;    thisLetter = letterSet[-1]&amp;#10;elif thisTrialType ==1: # an n-back trial&amp;#10;    thisLetter = targetLetter&amp;#10;&amp;#10;&amp;#10;lettersShown.append(thisLetter)&amp;#10;trials.addData('trialCount', trialCount)&amp;#10;trials.addData('itemPresented', thisLetter)&amp;#10;trials.addData('trialType', thisTrialType)&amp;#10;&amp;#10;&amp;#10;if thisTrialType == 1:&amp;#10;    correct = 'right'&amp;#10;else:&amp;#10;    correct = 'left'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="trialCount += 1;&amp;#10;if ((trialCount &gt;= trialList.length)) {&amp;#10;    trialCount = 0;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trialCount +=1&amp;#10;if trialCount &gt;= len(trialList):&amp;#10;    trialCount = 0&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="pickLetter_0back" valType="code"/>
      </CodeComponent>
      <TextComponent name="fixation">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="fixation" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="letter_0back">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="letter_0back" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$thisLetter.join(choice((str.upper, str.lower))(c) for c in thisLetter)&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="'left', 'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="frame N" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Experiment_Instructions_0back">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="key1 = 'right arrow'&amp;#10;key2 = 'left arrow'&amp;#10;sessOrder = []&amp;#10;trialList = []&amp;#10;n = 0" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="key1 = &quot;right arrow&quot;;&amp;#10;key2 = &quot;left arrow&quot;;&amp;#10;sessOrder = [];&amp;#10;trialList = [];&amp;#10;n = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="n = 0;&amp;#10;totalTrials = 18;&amp;#10;nBackTrials = 6;&amp;#10;blocks = 4;&amp;#10;list1 = [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0];&amp;#10;list2 = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0];&amp;#10;list3 = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1];&amp;#10;list4 = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1];&amp;#10;trialOrder1 = [list1, list2, list3, list4];&amp;#10;trialOrder2 = [list2, list3, list4, list1];&amp;#10;trialOrder3 = [list3, list4, list1, list2];&amp;#10;trialOrder4 = [list4, list1, list2, list3];&amp;#10;trialOrder5 = [list2, list4, list3, list1];&amp;#10;trialOrder6 = [list3, list2, list1, list4];&amp;#10;if ((expInfo[&quot;counterbalance&quot;] === &quot;1&quot;)) {&amp;#10;    sessOrder = trialOrder1;&amp;#10;} else {&amp;#10;    if ((expInfo[&quot;counterbalance&quot;] === &quot;2&quot;)) {&amp;#10;        sessOrder = trialOrder2;&amp;#10;    } else {&amp;#10;        if ((expInfo[&quot;counterbalance&quot;] === &quot;3&quot;)) {&amp;#10;            sessOrder = trialOrder3;&amp;#10;        } else {&amp;#10;            if ((expInfo[&quot;counterbalance&quot;] === &quot;4&quot;)) {&amp;#10;                sessOrder = trialOrder4;&amp;#10;            } else {&amp;#10;                if ((expInfo[&quot;counterbalance&quot;] === &quot;5&quot;)) {&amp;#10;                    sessOrder = trialOrder5;&amp;#10;                } else {&amp;#10;                    if ((expInfo[&quot;counterbalance&quot;] === &quot;6&quot;)) {&amp;#10;                        sessOrder = trialOrder6;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;ele = trials_7.thisRepN;&amp;#10;if ((ele &lt; blocks)) {&amp;#10;    trialList = sessOrder[ele];&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# usually we would use a conditions file to specify the number of nBack trials&amp;#10;# but we want to ensure the position of the first n-Back trial&amp;#10;# adapts to the requested n. i.e. if this is a 4-back trial&amp;#10;# we cannot present an n-Back trial in the first 3 trials&amp;#10;&amp;#10;# what is the n (e.g. n = 2 &quot;remember if this item is the same as 2 back&quot;)&amp;#10;n = 0&amp;#10;# how many trials in total?&amp;#10;totalTrials = 18&amp;#10;# how many n-Back trials?&amp;#10;nBackTrials = 6&amp;#10;# how many blocks?&amp;#10;blocks = 4&amp;#10;# make a list of trials; 0 = not nBack; 1 = nBack trial&amp;#10;#trialList = [0]*(totalTrials-nBackTrials)+[1]*nBackTrials&amp;#10;&amp;#10;# buffer trials = first set of trials where an n-back trial cannot be presented&amp;#10;#bufferTrials = trialList[:n]&amp;#10;&amp;#10;# experimental trials - include nBack trials&amp;#10;#experimentalTrials = trialList[n:]&amp;#10;&amp;#10;# randomise the experimental trials&amp;#10;#shuffle(experimentalTrials)&amp;#10;&amp;#10;# combine the buffer trials and experimental trials to make the final trialList&amp;#10;#trialList = bufferTrials+experimentalTrials&amp;#10;list1 =[0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0]&amp;#10;list2 = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]&amp;#10;list3 = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1]&amp;#10;list4 = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1]&amp;#10;&amp;#10;trialOrder1 = [list1, list2, list3, list4]&amp;#10;trialOrder2 = [list2, list3, list4, list1]&amp;#10;trialOrder3 = [list3, list4, list1, list2]&amp;#10;trialOrder4 = [list4, list1, list2, list3]&amp;#10;trialOrder5 = [list2, list4, list3, list1]&amp;#10;trialOrder6 = [list3, list2, list1, list4]&amp;#10;&amp;#10;if expInfo['counterbalance'] == '1':&amp;#10;    sessOrder = trialOrder1&amp;#10;elif expInfo['counterbalance'] == '2':&amp;#10;    sessOrder = trialOrder2&amp;#10;elif expInfo['counterbalance'] == '3':&amp;#10;    sessOrder = trialOrder3&amp;#10;elif expInfo['counterbalance'] == '4':&amp;#10;    sessOrder = trialOrder4&amp;#10;elif expInfo['counterbalance'] == '5':&amp;#10;    sessOrder = trialOrder5&amp;#10;elif expInfo['counterbalance'] == '6':&amp;#10;    sessOrder = trialOrder6&amp;#10;&amp;#10;ele = trials_7.thisRepN&amp;#10;if ele &lt; blocks:&amp;#10;    trialList = sessOrder[ele]" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="$&quot;This is an experimental block for the &quot;  + str(n) + &quot;-back task.  Whenever you see the letter X press the &quot; + str(key1) + &quot; key (upper or lower case). Otherwise, press the the &quot; + str(key2) + &quot; key. The letters will flash briefly on screen and you may respond even after the letter disappears during the '+'. Press the 'spacebar' to begin the task.&quot;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback_0back">
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="nCorr = Number.parseInt(trials.data[&quot;key_resp_5.corr&quot;].sum());&amp;#10;msg = `You got ${nCorr} trial(s) correct. Press Space to continue.`;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="nCorr = int(trials.data['key_resp_5.corr'].sum())&amp;#10;msg = f&quot;You got {nCorr} trial(s) correct. Press Space to continue.&quot; " valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback_nback">
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="nCorr = Number.parseInt(trials.data[&quot;key_resp_2.corr&quot;].sum());&amp;#10;msg = `You got ${nCorr} trial(s) correct. Press Space to continue.`;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="nCorr = int(trials.data['key_resp_2.corr'].sum())&amp;#10;msg = f&quot;You got {nCorr} trial(s) correct. Press Space to continue.&quot; " valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixationTrial">
      <TextComponent name="fixation_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="fixation_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_9">
        <Param name="allowedKeys" updates="constant" val="'period','comma'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_9" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ParallelOutComponent name="p_port_3">
        <Param name="address" updates="None" val="0xCFF8" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="p_port_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startData" updates="None" val="255" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopData" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".03" valType="code"/>
        <Param name="syncScreen" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </ParallelOutComponent>
      <ParallelOutComponent name="p_port_5">
        <Param name="address" updates="None" val="0xCFF8" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="p_port_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startData" updates="None" val="255" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="key_resp_9" valType="code"/>
        <Param name="stopData" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".04" valType="code"/>
        <Param name="syncScreen" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </ParallelOutComponent>
    </Routine>
    <Routine name="transitionSlide">
      <CodeComponent name="code_5">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="trialInstruct = 1&amp;#10;trialInstruct2 = ''" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="trialInstruct = 1;&amp;#10;trialInstruct2 = &quot;&quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((trials_4.thisN === 0)) {&amp;#10;    continueRoutine = true;&amp;#10;    trialInstruct = 1;&amp;#10;    trialInstruct2 = &quot;1 trial ago&quot;;&amp;#10;} else {&amp;#10;    if ((trials_4.thisN === 4)) {&amp;#10;        continueRoutine = true;&amp;#10;        trialInstruct = 2;&amp;#10;        trialInstruct2 = &quot;2 trials ago&quot;;&amp;#10;    } else {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if trials_4.thisN == 0:&amp;#10;    continueRoutine = True&amp;#10;    trialInstruct = 1&amp;#10;    trialInstruct2 = '1 trial ago'&amp;#10;elif trials_4.thisN == 4:&amp;#10;    continueRoutine = True&amp;#10;    trialInstruct = 2&amp;#10;    trialInstruct2 = '2 trials ago'&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="trialInstruct = 2;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trialInstruct = 2" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_7">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="text_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$&quot; The next set of blocks are for the  &quot;+ str(trialInstruct) + &quot;-back task. Remember, this requires you to respond if the current letter is the same as &quot;+ str(trialInstruct2) + &quot;. Press the 'spacebar' to continue.&quot;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_11" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixation_end">
      <TextComponent name="text_8">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text_8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="warmUpPulse">
      <ParallelOutComponent name="warmUp">
        <Param name="address" updates="None" val="0xCFF8" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="warmUp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startData" updates="None" val="255" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopData" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".4" valType="code"/>
        <Param name="syncScreen" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </ParallelOutComponent>
      <CodeComponent name="code_6">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((trials_7.thisN === 0)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if trials_7.thisN == 0:&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="introSlide">
      <TextComponent name="text_9">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="text_9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The first set of blocks are for the 0-back task. Remember, this requires you to respond if the current trial shows the letter X or not. Press the 'spacebar' to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="introSlide"/>
    <LoopInitiator loopType="TrialHandler" name="trials_7">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('N_Trial', 0)]), OrderedDict([('N_Trial', 0)]), OrderedDict([('N_Trial', 0)]), OrderedDict([('N_Trial', 0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="zeroBackBlocks.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_7" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Experiment_Instructions_0back"/>
    <Routine name="fixation_2"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="totalTrials" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_0back"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="trials_7"/>
    <LoopInitiator loopType="TrialHandler" name="trials_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('N_trial', 1)]), OrderedDict([('N_trial', 1)]), OrderedDict([('N_trial', 1)]), OrderedDict([('N_trial', 1)]), OrderedDict([('N_trial', 2)]), OrderedDict([('N_trial', 2)]), OrderedDict([('N_trial', 2)]), OrderedDict([('N_trial', 2)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="nBackBlocks.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="transitionSlide"/>
    <Routine name="Experimental_Instructions_nback"/>
    <Routine name="fixation_2"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="totalTrials" valType="code"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_nback_2"/>
    <LoopTerminator name="trials_3"/>
    <LoopTerminator name="trials_4"/>
    <Routine name="endStudy"/>
  </Flow>
</PsychoPy2experiment>
